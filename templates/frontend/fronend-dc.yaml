---
{{- with .Values.global.frontend }}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ $.Values.global.appname }}
    name: {{ .name }}
    {{- range $label := $.Values.global.labels }}
    {{ $label.key }} : {{ tpl $label.value $ }}
    {{- end}}
  name: {{ .name }}
spec:
  replicas: {{ .replicas | default "1" }}
  selector:
    deploymentConfig: {{ .name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ $.Values.global.appname }}
        name: {{ .name }}
        deploymentConfig: {{ .name }}
      name: {{ .name }}-deploy
    spec:
      containers:
      - name: {{ .name }}
        env:
        - name: REACT_APP_BACKEND_URL
          value: {{  $.Values.global.backend.name }}.{{ $.Release.Namespace }}.svc.cluster.local
        - name: PORT
          value: "{{ .port }}"
        image: {{ $.Release.Namespace }}/{{ .name }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: {{ .port }}
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - {{ .name }}
      from:
        kind: ImageStreamTag
        namespace: {{ $.Release.Namespace }}
        name: {{ .name }}:{{ .tag | default "latest" }}
{{- end -}}